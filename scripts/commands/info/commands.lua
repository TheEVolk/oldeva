--[[
    –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.
    botcmd.new("–∫–æ–º–∞–Ω–¥–∞", "–æ–ø–∏—Å–∞–Ω–∏–µ", "—Å–º–∞–π–ª"[, { ... }])
]]
local command = botcmd.new("–∫–æ–º–∞–Ω–¥—ã", "—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞", {dev=1})

command.categories = {
    -- { "—Å–º–∞–π–ª", "–∏–º—è", "—è—Ä–ª—ã–∫" }
    { "üí°", "–û—Å–Ω–æ–≤–Ω—ã–µ", "main" },
    { "üéÆ", "–ú–∏–Ω–∏–∏–≥—Ä—ã", "games" },
    { "üîÆ", "RolePlay", "roleplay" },
    { "üòÄ", "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ", "fun" },
    { "üè¨", "–ò–≥—Ä–æ–≤–æ–π –º–∞–≥–∞–∑–∏–Ω", "shop" },
    { "‚öô", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings" },
    { "üìú", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "info" },
    { "üî®", "–£—Ç–∏–ª–∏—Ç—ã", "util" },
    { "‚¨õ", "–ü—Ä–æ—á–µ–µ", "other" },
}

function command.exe (msg, args, other, rmsg, user)
    if tonumber(args[2]) then return command.print_category(msg, tonumber(args[2]), other, rmsg, user) end

    numcmd.linst(user, command.print_category)

    rmsg:line("üóÉ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥:")
    for i,cat in ipairs(command.categories) do rmsg:line("‚ñ∫ %s %i. %s", cat[1], i, cat[2]) end
    rmsg:line("\nüí° –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏—Ñ—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ –º–µ–Ω—é.")
end

function command.print_category(msg, num, other, rmsg, user)
    local cat = ca(command.categories[num], "–∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", "–∫–æ–º–∞–Ω–¥—ã")

    rmsg:line("%s –ö–∞—Ç–µ–≥–æ—Ä–∏—è <<%s>>", cat[1], cat[2])
    for key,com in pairs(botcmd.commands) do
        if com.type == cat[3] and (not com.right or user:isRight(com.right)) then
            rmsg:line("‚ñ∫ %s %s \n‚Ü≥ %s", com[1], com.use or '', com[2])
        end
    end

    if msg.peer_id > 2000000000 then
        user:ls(rmsg.message)
        rmsg.message = "üëì –û—Ç–ø—Ä–∞–≤–∏–ª–∞ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ —Ç–≤–æ–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±–µ –Ω–µ –∑–∞–≥—Ä—è–∑–Ω—è—Ç—å —á–∞—Ç <3"
    end
end

return command
