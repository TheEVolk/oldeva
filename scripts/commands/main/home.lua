local command = botcmd.new("–¥–æ–º", "—Å–∏—Å—Ç–µ–º–∞ –¥–æ–º–æ–≤", {dev=1})

command:addsub("–ø–æ–∫–∏–Ω—É—Ç—å", function(msg, args, other, rmsg, user)
	local house = ca(db.select_one("*", "houses", "id = %i", user.home), "—É –≤–∞—Å –Ω–µ—Ç —Å–≤–æ–µ–≥–æ –¥–æ–º–∞ –∏–ª–∏ —É—á–∞—Å—Ç–∫–∞")
	local structure = cities.structures[house.structure]

	local yes = function(msg, args, other, rmsg, user)
		if house.owner == user.vkid then
			db("DELETE FROM `houses` WHERE id=%i", house.id)
			db("UPDATE `accounts` SET `home`=0 WHERE `home`=%i", house.id)
		end
		user:set("home", 0)
		rmsg:line("üö© –í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–∫–∏–Ω—É–ª–∏ —É—á–∞—Å—Ç–æ–∫.")
	end

	rmsg:line("–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å–≤–æ–π –¥–æ–º?")
	numcmd.lmenu_funcs(rmsg, user, {{
		{ 1, "–ù–µ—Ç", command.exe, "positive" },
		{ 2, "–î–∞", yes, "negative" }
	}})
end)

command:addmsub("–∂–∏—Ç—å", "<–∏–¥ —É—á–∞—Å—Ç–∫–∞>", "h", function(msg, args, other, rmsg, user, house)
	ca(user.home == 0, "–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —É—á–∞—Å—Ç–∫–µ\n–ü–æ–∫–∏–Ω—É—Ç—å —É—á–∞—Å—Ç–æ–∫ >> –¥–æ–º –ø–æ–∫–∏–Ω—É—Ç—å")
    local target = db.get_user(house.owner)

    local accepttohouse = function(target, source, rmsg)
        local house = ca(db.select_one("*", "houses", "owner=%i", target.vkid), "—É –≤–∞—Å –Ω–µ—Ç —É—á–∞—Å—Ç–∫–∞")
		ca(source.home == 0, "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ —É—á–∞—Å—Ç–∫–µ")

        source:set("home", house.id)

        source:ls("‚úÖ –í–∞—Å –ø—Ä–∏–Ω—è–ª–∏ –≤ —É—á–∞—Å—Ç–æ–∫ ‚Ññ%i.", house.id)
        rmsg:line("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª–∏ %s –≤ —É—á–∞—Å—Ç–æ–∫.", source:r())

		source:unlockAchiv('myhome')
    end

    local qid = inv.create(user, target, accepttohouse)
	rmsg:line("‚ú≥ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ —É—á–∞—Å—Ç–æ–∫ ‚Ññ%i", house.id)
	inv.lines(rmsg, qid, target)
end)

command:addmsub("–∏–Ω—Ñ–æ", "<–∏–¥ —É—á–∞—Å—Ç–∫–∞>", "h", function(msg, args, other, rmsg, user, house)
	local structure = cities.structures[house.structure]

	rmsg:lines(
		{ "üèò –ü–æ—Å—Ç—Ä–æ–π–∫–∞ ‚Ññ%i", house.id },
        { "üèô –≥. %s —É–ª. %s %i", cities.cities[house.city].name, cities.streets[house.city][house.street], house.number },
        { "üè£ –ü–æ—Å—Ç—Ä–æ–π–∫–∞ >> %s", structure[1] },
		{ "üë§ –í–ª–∞–¥–µ–ª–µ—Ü >> %s", db.get_user(house.owner):r() },
		{ "üë• –ñ–∏—Ç–µ–ª–µ–π >> %i —á–µ–ª.", db.get_count("accounts", "home=%i", house.id) }
    )

    rmsg.attachment = homes.get_structure_image(msg.peer_id, house.structure, house.structure_variant)

	numcmd.menu_funcs(rmsg, user, {
        {{ 1, "üë• –ñ–∏—Ç–µ–ª–∏", command.sub['–∂–∏—Ç–µ–ª–∏'][3] }},
        {user.home ~= house.id and { 2, "üñä –ñ–∏—Ç—å –≤ —ç—Ç–æ–º –¥–æ–º–µ", command.sub['–∂–∏—Ç—å'][3], 'primary' } or { 2, "üëí –ü–æ–∫–∏–Ω—É—Ç—å –¥–æ–º", command.sub['–ø–æ–∫–∏–Ω—É—Ç—å'], 'negative' }}
    }, house)
end)

command:addmsub("–∂–∏—Ç–µ–ª–∏", "<–∏–¥ —É—á–∞—Å—Ç–∫–∞>", "h", function(msg, args, other, rmsg, user, house)
	local structure = cities.structures[house.structure]

	rmsg:lines(
		{ "üèò –ü–æ—Å—Ç—Ä–æ–π–∫–∞ ‚Ññ%i", house.id },
		{ "üë§ –í–ª–∞–¥–µ–ª–µ—Ü >> %s", db.get_user(house.owner):r() },
		{ "üë• –ñ–∏—Ç–µ–ª–∏ (%i —á–µ–ª.)", db.get_count("accounts", "home=%i", house.id) },
		{ db.select("*", "accounts", "home=%i", house.id), "‚û§ :i:. :names.dbr(v):" }
    )

    rmsg.attachment = homes.get_structure_image(msg.peer_id, house.structure, house.structure_variant)
end)

function command.exe(msg, args, other, rmsg, user)
    local house = db.select_one("*", "houses", "id = %i", user.home)

    if not house then
        rmsg:lines("üèö –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–≤–æ–µ–≥–æ –¥–æ–º–∞ –∏–ª–∏ —É—á–∞—Å—Ç–∫–∞.", "üèò –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!")
        numcmd.onef(rmsg, user, "–ü–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–æ–∫", "—É—á–∞—Å—Ç–∫–∏")
        return
    end

    return command.sub["–∏–Ω—Ñ–æ"][3](msg, args, other, rmsg, user, house)
end


return command
