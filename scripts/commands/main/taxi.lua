local command = botcmd.new("—Ç–∞–∫—Å–∏", "—Å–∏—Å—Ç–µ–º–∞ —Ç–∞–∫—Å–∏", {dev=1})

command:addsub("–≤–∑—è—Ç—å", function (msg, args, other, rmsg, user)
    local taxi_tr = ca(
        db.select_one('id, trid, cityid, route', 'taxi_tr', 'vkid = %i', user.vkid),
        "–≤–≤–µ–¥–∏ '—Ç–∞–∫—Å–∏ —Å–µ—Ç <–≥–æ—Å –Ω–æ–º–µ—Ä>', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–∞–∫—Å–æ–≤–∞—Ç—å"
    )

    local car = db.select_one('model', 'tr_obj', 'id = %i', taxi_tr.trid)--transport.get(taxi_tr.trid)
    local model = transport.models[car.model]

    ca(taxi_tr.route == '', "–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –∑–∞—è–≤–∫—É –ø–æ–∫–∞ –≤–µ–∑—ë—Ç–µ –ø–∞—Å—Å–∞–∂–∏—Ä–∞")
    local passanger = ca(
        taxi_get_passangers()[taxi_tr.cityid],
        "–≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç –∑–∞—è–≤–æ–∫. –ñ–¥–∏—Ç–µ."
    )

    if passanger.is_comfort then
        ca(
            model.brand == 'Ches' or model.brand == 'Mod' or model.brand == 'Top',
            "–≤–∞—à —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç –∫–ª–∞—Å—Å—É"
        )
    end

    taxi_get_passangers()[taxi_tr.cityid] = nil
    passanger.endtime = os.time() + math.max(math.floor(passanger.distance/model.speed*5), 10)
    passanger.starttime = os.time()

    db("UPDATE taxi_tr SET `route` = '%s' WHERE id = %i", json.encode(passanger), taxi_tr.id)

    local rmsg_sa = rmsgclass.get()
    rmsg_sa:line("üöñ %s –≤–∑—è–ª –∑–∞—è–≤–∫—É.", user:r() )

    local to_send = {}
    for i,v in db.iselect("vkid", "taxi_tr", "cityid = %i", taxi_tr.cityid) do table.insert(to_send, v.vkid) end
    send_all(rmsg_sa, to_send)

    return command.exe(msg, args, other, rmsg, user)
end)

command:addmsub("—Å–µ—Ç", "<–≥–æ—Å –Ω–æ–º–µ—Ä>", "s", function (msg, args, other, rmsg, user, number)
    ca(user.job == 7, "–¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º —Å —Ä–∞–±–æ—Ç–æ–π <<—Ç–∞–∫—Å–∏—Å—Ç>>")
    local car = ca(db.select_one("*", "tr_obj", "`gosnum`='%s'", number), "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω")

    ca(car.pos > 0, "–∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –≤ –≥–æ—Ä–æ–¥–µ")
    ca(car.owner == user.vkid, "–≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è")
    ca(
        not db.select_one('id', 'taxi_tr', 'vkid = %i', user.vkid)
            or db.select_one('route', 'taxi_tr', 'vkid = %i', user.vkid).route == '',
        "–¥–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–µ–∑–¥–∫–∏"
    )

    db("DELETE FROM `taxi_tr` WHERE vkid = %i", user.vkid)
    db("INSERT INTO `taxi_tr` VALUES(NULL, %i, %i, %i, NULL, 0)", user.vkid, car.id, car.pos)

    local rmsg_sa = rmsgclass.get()
    rmsg_sa:lines({"üöñ %s –≤–æ—à–µ–ª –≤ —Å–µ–∞–Ω—Å.", user:r()}, { "üöò %s [%s]", transport.full_name(car), car.gosnum } )

    local to_send = {}
    for i,v in db.iselect("vkid", "taxi_tr", "cityid = %i", car.pos) do table.insert(to_send, v.vkid) end
    send_all(rmsg_sa, to_send)

    return command.exe(msg, args, other, rmsg, user)
end)

command:addsub("—Å—Ç–æ–ø", function (msg, args, other, rmsg, user)
    local taxi_tr = ca(
        db.select_one('id, trid, cityid, route, pay', 'taxi_tr', 'vkid = %i', user.vkid),
        "—Å–µ–∞–Ω—Å —Ç–∞–∫—Å–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    )

    ca(taxi_tr.route == '', "–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ–∞–Ω—Å –ø–æ–∫–∞ –≤–µ–∑—ë—Ç–µ –ø–∞—Å—Å–∞–∂–∏—Ä–∞")
    db("DELETE FROM `taxi_tr` WHERE vkid = %i", user.vkid)

    local rmsg_sa = rmsgclass.get()
    rmsg_sa:line("üöñ %s –ø–æ–∫–∏–Ω—É–ª —Å–µ–∞–Ω—Å.", user:r() )

    local to_send = {}
    for i,v in db.iselect("vkid", "taxi_tr", "cityid = %i", taxi_tr.cityid) do table.insert(to_send, v.vkid) end
    send_all(rmsg_sa, to_send)

    if taxi_tr.pay > 0 then user:addMoneys(taxi_tr.pay) end

    return "üöñ –°–µ–∞–Ω—Å —Ç–∞–∫—Å–∏ –∑–∞–∫—Ä—ã—Ç!"
end)

command:addmsub("—Ä–∞—Ü–∏—è", "<—Ç–µ–∫—Å—Ç>", "d", function (msg, args, other, rmsg, user, text)
    ca(#text > 0, "—Ç–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    ca(user.job == 7, "–¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º —Å —Ä–∞–±–æ—Ç–æ–π <<—Ç–∞–∫—Å–∏—Å—Ç>>")
    local taxi_tr = ca(
        db.select_one('trid, cityid, route', 'taxi_tr', 'vkid = %i', user.vkid),
        "–≤–≤–µ–¥–∏ '—Ç–∞–∫—Å–∏ —Å–µ—Ç <–≥–æ—Å –Ω–æ–º–µ—Ä>', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–∞–∫—Å–æ–≤–∞—Ç—å"
    )

    local rmsg_sa = rmsgclass.get()
    rmsg_sa:line("üìª %s >> %s", user:r(), safe.clear(text) )
    --rmsg_sa:line("\nüìù –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞, —Ç–æ —Å–æ–æ–±—â–∏—Ç–µ –≤ *evabottp(—Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É).")
    --rmsg_sa:line("üí° –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π `—Ç–∞–∫—Å–∏ —Ä–∞—Ü–∏—è`.")


    local to_send = {}
    for i,v in db.iselect("vkid", "taxi_tr", "cityid = %i", taxi_tr.cityid) do table.insert(to_send, v.vkid) end
    send_all(rmsg_sa, to_send)

    return nil--"üéô –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"
end)

command:addmsub("–ª–∏—Å—Ç", "<–≥–æ—Ä–æ–¥>", "d", function (msg, args, other, rmsg, user, city_name)
    local city = ca(transport.find_city(city_name), "–≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.", "—Ç—Ä")
    local taxi_tr = ca(db.select_one('trid, cityid, route', 'taxi_tr', 'vkid = %i', user.vkid), "–≤—ã –Ω–µ —Ç–∞–∫—Å–∏—Å—Ç")

    rmsg:line("üõ∞ –¢–∞–∫—Å–∏—Å—Ç—ã <<%s>>", city.name)
    for i,v in db.iselect("vkid", "taxi_tr", "cityid = %i AND route IS NULL", city.id) do
        rmsg:line("‚ñ∫ %s.", db.get_user(v.vkid):r())
    end

    rmsg:line("\nüöñ –í—Å–µ–≥–æ –≤ –∏–≥—Ä–µ: %i —Ç.", db.get_count('taxi_tr'))
end)

function command.exe(msg, args, other, rmsg, user)
    ca(user.job == 7, "–¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∞–º —Å —Ä–∞–±–æ—Ç–æ–π <<—Ç–∞–∫—Å–∏—Å—Ç>>")
    local taxi_tr = ca(
        db.select_one('trid, cityid, route, pay', 'taxi_tr', 'vkid = %i', user.vkid),
        "–≤–≤–µ–¥–∏ '—Ç–∞–∫—Å–∏ —Å–µ—Ç <–≥–æ—Å –Ω–æ–º–µ—Ä>', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–∞–∫—Å–æ–≤–∞—Ç—å"
    )

    local car = db.select_one('gosnum', 'tr_obj', 'id = %i', taxi_tr.trid)--transport.get(taxi_tr.trid)
    --console.log("lol", taxi_tr.route)
    local route = taxi_tr.route ~= '' and json.decode(taxi_tr.route)
    local pexit = false
    if route and route.endtime <= os.time() then
        route = nil
        pexit = true
    end

    rmsg:lines(
        { "üöñ –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ %s", car.gosnum },
        { "üõ∞ –í –≥–æ—Ä–æ–¥–µ %i —Ç–∞–∫—Å–∏.", db.get_count('taxi_tr', 'cityid = %i', taxi_tr.cityid )},
        { "üí∞ –ó–∞ —Å–µ–∞–Ω—Å: %s –±–∏—Ç.", reduce_value(taxi_tr.pay) },

        route and "",
        route and { "üóª –î–æ —Ü–µ–ª–∏: %s –º.", comma_value(math.floor((1 - (os.time()-route.starttime) / (route.endtime-route.starttime)) * route.distance)) },
        route and { "‚è≤ –û—Å—Ç–∞–ª–æ—Å—å: %s", moment.get_time(route.endtime - os.time()) },
        route and { "üí∑ –ü–ª–∞—Ç—è—Ç: %s –±–∏—Ç.", comma_value(route.pay) },
        route and { "üõã –ö–ª–∞—Å—Å: %s.", route.is_comfort and "–∫–æ–º—Ñ–æ—Ä—Ç" or "—ç–∫–æ–Ω–æ–º" },
        pexit and { "üö∂ –ü–∞—Å—Å–∞–∂–∏—Ä –≤—ã—Ö–æ–¥–∏—Ç..." },

        not route and { "\nüí° –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∞–Ω—Å —Ç–∞–∫—Å–∏ –∫–æ–º–∞–Ω–¥–æ–π `—Ç–∞–∫—Å–∏ —Å—Ç–æ–ø`." },
        route and { "\nüí° –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-—Ç–æ –≤ —Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–æ–π `—Ä—Ü <—Ç–µ–∫—Å—Ç>`." }
    )
end

return command
